using System;

namespace Shapes
{
    public class Rectangle : Shape
    {
        private int height;
        private int width;

        public Rectangle(int height, int width)
        {
            Height = height;
            Width = width;
        }
        public int Height 
        {
            get { return height; }
            private set
            {
                if (value < 0)
                {
                    throw new ArgumentException("Can't be negative.");
                }
                height = value;
            }
        }
        public int Width
        {
            get { return width; }
            private set
            {
                if (value < 0)
                {
                    throw new ArgumentException("Can't be negative");
                }
                width = value;
            }
        }

        public override double CalculateArea()
        {
            return Height * Width;
        }

        public override double CalculatePerimeter()
        {
            return (2 * Height) + (2 * Width);
        }
        public override void Draw()
        {
            string s = "╔";
            string space = "";
            string temp = "";
            for (int i = 0; i < Width; i++)
            {
                space += " ";
                s += "═";
            }
            s += "╗" + "\n";
            for (int i = 0; i < Height; i++)
            {
                s += temp + "║" + space + "║" + "\n";

            }

            s += temp + "╚";
            for (int i = 0; i < Width; i++)
            {
                s += "═";
            }


            s += "╝" + "\n";

            Console.Write(s);
            Console.ResetColor();
        }
    }
}
